{"version":3,"sources":["redux/types.js","redux/actions.js","assets/img/forest.png","components/Card.js","components/GameBoard.js","assets/spinner.gif","App.js","assets/img/cheetah.png","assets/img/deer.png","assets/img/fox.png","assets/img/lion.png","assets/img/dog.png","assets/img/redPanda.png","assets/img/wolf.png","assets/img/yalk.png","redux/gameReducer.js","redux/store.js","index.js"],"names":["MIX_CARDS","FLIP_CARD","SET_FLIPPED_CARD","REMOVE_LISTENER","UNFLIP_CARD","RESET_BOARD","SET_LOCK_BOARD","SET_FIRST_CARD","RESET_GAME","SET_MATCHED_PAIRS","mixCards","type","removeListener","id","unflipCard","resetBoard","setLockBoard","lockBoardState","checkForMatch","firstCard","secondCard","dispatch","getState","currentState","cards","disableCards","unflipCards","matchedPairs","setTimeout","Card","flipCards","card","CardRoot","order","flipped","onClick","onListen","CardImg","front","src","uri","forest","styled","div","img","connect","state","lockBoard","flipCard","hasFlippedCard","setFirstCard","useEffect","Root","map","index","gameIsResetting","numberOfCards","resetGame","useState","showWinnerModal","setShowWinnerModal","RootContainer","Button","disabled","SpinnerForButton","spinner","LoadingShadow","WinnerModal","WinTitle","ButtonsContainer","button","initialState","cheetah","deer","fox","lion","dog","redPanda","wolf","yalk","store","createStore","action","cardsWithRandomPos","Math","floor","random","resetCards","applyMiddleware","thunk","WrapedApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96630d57.chunk.js","sourcesContent":["export const MIX_CARDS = 'MIX_CARDS'\nexport const FLIP_CARD = 'FLIP_CARD'\nexport const SET_FLIPPED_CARD = 'ADD_FLIPPED_CARD'\nexport const REMOVE_LISTENER = 'REMOVE_LISTENER'\nexport const UNFLIP_CARD = 'UNFLIP_CARD'\nexport const RESET_BOARD = 'RESET_BOARD'\nexport const SET_LOCK_BOARD = 'SET_LOCK_BOARD'\nexport const SET_FIRST_CARD = 'SET_FIRST_CARD'\nexport const RESET_GAME = 'RESET_GAME'\nexport const SET_MATCHED_PAIRS = 'SET_MATCHED_PAIRS'\n","import {\n  MIX_CARDS,\n  FLIP_CARD,\n  SET_FLIPPED_CARD,\n  REMOVE_LISTENER,\n  UNFLIP_CARD,\n  RESET_BOARD,\n  SET_LOCK_BOARD,\n  SET_FIRST_CARD,\n  RESET_GAME,\n  SET_MATCHED_PAIRS,\n} from 'src/redux/types'\n\nexport const mixCards = () => {\n  return {\n    type: MIX_CARDS,\n  }\n}\n\nexport const flipCard = (id) => {\n  return {\n    type: FLIP_CARD,\n    id,\n  }\n}\n\nexport const setFlippedCard = (hasFlippedCard) => {\n  return {\n    type: SET_FLIPPED_CARD,\n    hasFlippedCard,\n  }\n}\n\nexport const setMatchedPairs = (matchedPairs) => {\n  return {\n    type: SET_MATCHED_PAIRS,\n    matchedPairs,\n  }\n}\n\nexport const removeListener = (id) => {\n  return {\n    type: REMOVE_LISTENER,\n    id,\n  }\n}\n\nexport const unflipCard = (id) => {\n  return {\n    type: UNFLIP_CARD,\n    id,\n  }\n}\n\nexport const resetBoard = () => {\n  return {\n    type: RESET_BOARD,\n  }\n}\n\nexport const resetGame = () => (dispatch) => {\n  dispatch({\n    type: RESET_GAME,\n  })\n  setTimeout(() => {\n    dispatch(mixCards())\n    dispatch(setLockBoard(false))\n  }, 700)\n}\n\nexport const setLockBoard = (lockBoardState) => {\n  return {\n    type: SET_LOCK_BOARD,\n    lockBoardState,\n  }\n}\n\nexport const setFirstCard = (id) => {\n  return {\n    type: SET_FIRST_CARD,\n    id,\n  }\n}\n\nexport const flipCards = (id) => (dispatch, getState) => {\n  const currentState = getState()\n  if (currentState.lockBoard) return\n  if (id === currentState.firstCard) return\n  dispatch(flipCard(id))\n\n  if (!currentState.hasFlippedCard) {\n    dispatch(setFlippedCard(true))\n    dispatch(setFirstCard(id))\n  } else {\n    dispatch(checkForMatch(currentState.firstCard, id))\n  }\n}\n\nexport const checkForMatch = (firstCard, secondCard) => (\n  dispatch,\n  getState\n) => {\n  const currentState = getState()\n  if (currentState.firstCard === null) return\n  if (\n    currentState.cards[firstCard].type === currentState.cards[secondCard].type\n  ) {\n    dispatch(disableCards(firstCard, secondCard))\n  } else {\n    dispatch(unflipCards(firstCard, secondCard))\n  }\n}\n\nexport const disableCards = (firstCard, secondCard) => (dispatch, getState) => {\n  dispatch(setMatchedPairs(getState().matchedPairs + 1))\n  dispatch(removeListener(firstCard))\n  dispatch(removeListener(secondCard))\n  dispatch(resetBoard())\n}\n\nexport const unflipCards = (firstCard, secondCard) => (dispatch) => {\n  dispatch(setLockBoard(true))\n  setTimeout(() => {\n    dispatch(unflipCard(firstCard))\n    dispatch(unflipCard(secondCard))\n    dispatch(resetBoard())\n  }, 1000)\n}\n","export default __webpack_public_path__ + \"static/media/forest.0acc94c7.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport forest from 'src/assets/img/forest.png'\n\nconst Card = ({ flipCards, card }) => {\n  return (\n    <CardRoot\n      order={card.order}\n      flipped={card.flipped}\n      onClick={() => card.onListen && flipCards(card.id)}\n    >\n      <CardImg front src={card.uri} />\n      <CardImg src={forest} />\n    </CardRoot>\n  )\n}\n\nexport default Card\n\nconst CardRoot = styled.div`\n  width: 150px;\n  height: 150px;\n  margin: 5px;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 0.7s;\n  ${({ flipped }) => flipped && 'transform: rotateY(180deg)'};\n  ${({ order }) => `order: ${order}`};\n`\n\nconst CardImg = styled.img`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  position: absolute;\n  border-radius: 45px;\n  background: #d4efdf;\n  backface-visibility: hidden;\n  ${({ front }) => front && 'transform: rotateY(180deg)'};\n`\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { mixCards, flipCards } from 'src/redux/actions'\nimport Card from 'src/components/Card'\nimport styled from 'styled-components'\n\nconst GameBoard = ({ mixCards, cards, flipCards }) => {\n  useEffect(() => {\n    mixCards()\n  }, [mixCards])\n\n  return (\n    <Root>\n      {cards.map((card, index) => (\n        <Card flipCards={flipCards} card={card} key={index} />\n      ))}\n    </Root>\n  )\n}\nconst mapStateToProps = (state) => ({\n  cards: state.cards,\n})\n\nexport default connect(mapStateToProps, { mixCards, flipCards })(GameBoard)\n\nconst Root = styled.div`\n  width: 650px;\n  display: flex;\n  flex-wrap: wrap;\n  user-select: none;\n`\n","export default __webpack_public_path__ + \"static/media/spinner.a1a99674.gif\";","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { resetGame } from 'src/redux/actions'\nimport GameBoard from 'src/components/GameBoard'\nimport styled from 'styled-components'\nimport spinner from 'src/assets/spinner.gif'\n\nconst App = ({ resetGame, gameIsResetting, matchedPairs, numberOfCards }) => {\n  const [showWinnerModal, setShowWinnerModal] = useState(false)\n\n  useEffect(() => {\n    if (matchedPairs === numberOfCards / 2) {\n      setShowWinnerModal(true)\n    } else {\n      setShowWinnerModal(false)\n    }\n  }, [matchedPairs, numberOfCards])\n\n  return (\n    <RootContainer>\n      <div>\n        <GameBoard />\n      </div>\n      <Button\n        onClick={() => {\n          resetGame()\n        }}\n        disabled={gameIsResetting}\n      >\n        {'New Game'}\n        {gameIsResetting && <SpinnerForButton src={spinner} />}\n      </Button>\n      {showWinnerModal && (\n        <>\n          <LoadingShadow />\n          <WinnerModal>\n            <WinTitle>{\"Congratulations! Let's play again?\"}</WinTitle>\n            <ButtonsContainer>\n              <Button\n                onClick={() => {\n                  setShowWinnerModal(false)\n                  resetGame()\n                }}\n              >\n                Yes\n              </Button>\n              <Button\n                onClick={() => {\n                  setShowWinnerModal(false)\n                }}\n              >\n                No\n              </Button>\n            </ButtonsContainer>\n          </WinnerModal>\n        </>\n      )}\n    </RootContainer>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  gameIsResetting: state.gameIsResetting,\n  matchedPairs: state.matchedPairs,\n  numberOfCards: state.numberOfCards,\n})\n\nexport default connect(mapStateToProps, {\n  resetGame,\n})(App)\n\nconst RootContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background: #f2f3f4;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  width: 140px;\n  border-radius: 8px;\n  outline: 0;\n  user-select: none;\n  background-color: #fff;\n  :disabled {\n    background-color: #ccc;\n  }\n`\nconst LoadingShadow = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: black;\n  opacity: 0.5;\n`\nconst WinnerModal = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 350px;\n  height: 150px;\n  background-color: white;\n  border-radius: 20px;\n`\nconst WinTitle = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n`\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-top: 10px;\n  width: 100%;\n`\nconst SpinnerForButton = styled.img`\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n`\n","export default __webpack_public_path__ + \"static/media/cheetah.2ec251d4.png\";","export default __webpack_public_path__ + \"static/media/deer.49a8ac49.png\";","export default __webpack_public_path__ + \"static/media/fox.c69b2a0d.png\";","export default __webpack_public_path__ + \"static/media/lion.86cb3e30.png\";","export default __webpack_public_path__ + \"static/media/dog.e653873f.png\";","export default __webpack_public_path__ + \"static/media/redPanda.0fc7be96.png\";","export default __webpack_public_path__ + \"static/media/wolf.e969a1fb.png\";","export default __webpack_public_path__ + \"static/media/yalk.44bbe806.png\";","import {\n  MIX_CARDS,\n  FLIP_CARD,\n  SET_FLIPPED_CARD,\n  REMOVE_LISTENER,\n  UNFLIP_CARD,\n  RESET_BOARD,\n  SET_LOCK_BOARD,\n  SET_FIRST_CARD,\n  RESET_GAME,\n  SET_MATCHED_PAIRS,\n} from 'src/redux/types'\nimport cheetah from 'src/assets/img/cheetah.png'\nimport deer from 'src/assets/img/deer.png'\nimport fox from 'src/assets/img/fox.png'\nimport lion from 'src/assets/img/lion.png'\nimport dog from 'src/assets/img/dog.png'\nimport redPanda from 'src/assets/img/redPanda.png'\nimport wolf from 'src/assets/img/wolf.png'\nimport yalk from 'src/assets/img/yalk.png'\n\nconst initialState = {\n  cards: [\n    {\n      id: 0,\n      type: 'cheetah',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: cheetah,\n    },\n    {\n      id: 1,\n      type: 'cheetah',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: cheetah,\n    },\n    {\n      id: 2,\n      type: 'deer',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: deer,\n    },\n    {\n      id: 3,\n      type: 'deer',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: deer,\n    },\n    {\n      id: 4,\n      type: 'fox',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: fox,\n    },\n    {\n      id: 5,\n      type: 'fox',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: fox,\n    },\n    {\n      id: 6,\n      type: 'lion',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: lion,\n    },\n    {\n      id: 7,\n      type: 'lion',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: lion,\n    },\n    {\n      id: 8,\n      type: 'dog',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: dog,\n    },\n    {\n      id: 9,\n      type: 'dog',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: dog,\n    },\n    {\n      id: 10,\n      type: 'redPanda',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: redPanda,\n    },\n    {\n      id: 11,\n      type: 'redPanda',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: redPanda,\n    },\n    {\n      id: 12,\n      type: 'wolf',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: wolf,\n    },\n    {\n      id: 13,\n      type: 'wolf',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: wolf,\n    },\n    {\n      id: 14,\n      type: 'yalk',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: yalk,\n    },\n    {\n      id: 15,\n      type: 'yalk',\n      flipped: false,\n      order: '',\n      onListen: true,\n      uri: yalk,\n    },\n  ],\n  hasFlippedCard: false,\n  lockBoard: false,\n  firstCard: null,\n  gameIsResetting: false,\n  matchedPairs: 0,\n  numberOfCards: 16,\n}\n\nexport const gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MIX_CARDS: {\n      const cardsWithRandomPos = state.cards.map((card) => {\n        return {\n          ...card,\n          onListen: true,\n          order: Math.floor(Math.random() * state.numberOfCards),\n        }\n      })\n\n      return {\n        ...state,\n        cards: cardsWithRandomPos,\n        gameIsResetting: false,\n        matchedPairs: 0,\n      }\n    }\n\n    case FLIP_CARD: {\n      const cards = state.cards.map((card) => {\n        if (card.id === action.id) {\n          return { ...card, flipped: true }\n        }\n        return card\n      })\n      return { ...state, cards }\n    }\n\n    case UNFLIP_CARD: {\n      const cards = state.cards.map((card) => {\n        if (card.id === action.id) {\n          return { ...card, flipped: false }\n        }\n        return card\n      })\n      return { ...state, cards }\n    }\n\n    case SET_FLIPPED_CARD: {\n      return { ...state, hasFlippedCard: action.hasFlippedCard }\n    }\n\n    case SET_MATCHED_PAIRS: {\n      return { ...state, matchedPairs: action.matchedPairs }\n    }\n\n    case REMOVE_LISTENER: {\n      const cards = state.cards.map((card) => {\n        if (card.id === action.id) {\n          return { ...card, onListen: false }\n        }\n        return card\n      })\n      return { ...state, cards }\n    }\n\n    case RESET_BOARD: {\n      return {\n        ...state,\n        hasFlippedCard: false,\n        lockBoard: false,\n        firstCard: null,\n      }\n    }\n    case RESET_GAME: {\n      const resetCards = state.cards.map((card) => {\n        return {\n          ...card,\n          flipped: false,\n          onListen: false,\n        }\n      })\n      return {\n        ...initialState,\n        lockBoard: true,\n        gameIsResetting: true,\n        cards: resetCards,\n      }\n    }\n\n    case SET_LOCK_BOARD: {\n      return { ...state, lockBoard: action.lockBoardState }\n    }\n\n    case SET_FIRST_CARD: {\n      return { ...state, firstCard: action.id }\n    }\n\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { gameReducer } from 'src/redux/gameReducer'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(gameReducer, applyMiddleware(thunk))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport './index.css'\n\nconst WrapedApp = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<WrapedApp />, document.getElementById('root'))\n"],"sourceRoot":""}